def libraryGroup = 'org.rekotlin'
def libraryVersion = '1.0.4'

apply plugin: 'kotlin'
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'maven-publish'

def javaHome = System.getenv("JAVA_HOME")

buildscript {
    ext.kotlin_version = '1.3.31'
    ext.junitPlugin_version = '1.0.0'
    ext.junit_jupiter_version = '5.0.0-M6'
    ext.junit_platform_launcher = "1.0.0-M6"

    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.junit.platform:junit-platform-gradle-plugin:$junitPlugin_version"
    }
}

repositories {
    mavenCentral()
    maven {
        url "https://plugins.gradle.org/m2/"
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    testCompile "org.junit.jupiter:junit-jupiter-api:$junit_jupiter_version"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:$junit_jupiter_version"
    testRuntime "org.junit.platform:junit-platform-launcher:$junit_platform_launcher"
}

test {
    testLogging {
        events 'started', 'passed'
    }
}

compileKotlin {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
    kotlinOptions.jvmTarget = "11"
    kotlinOptions.jdkHome = javaHome
}

compileTestKotlin {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
    kotlinOptions.jvmTarget = "11"
    kotlinOptions.jdkHome = javaHome
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar
}

Properties localProperties = new Properties()
file("local.properties").withInputStream { stream ->
    localProperties.load(stream)
}

publishing {
    publications {
        rekotlin(MavenPublication) {
            groupId libraryGroup
            artifactId 'rekotlin'
            version libraryVersion
            from components.java
            artifact(javadocJar)
            artifact(sourcesJar)
        }
    }
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/pgahq/ReKotlin-PGA-Fork")
            credentials {
                username = System.getenv("GPR_USERNAME") ?: localProperties.getProperty("gpr.user")
                password = System.getenv("GPR_TOKEN") ?: localProperties.getProperty("gpr.key")
            }
        }
    }
}
